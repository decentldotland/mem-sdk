(function(r,i){typeof exports=="object"&&typeof module<"u"?i(exports):typeof define=="function"&&define.amd?define(["exports"],i):(r=typeof globalThis<"u"?globalThis:r||self,i(r["mem-sdk"]={}))})(this,function(r){"use strict";const i="https://mem-cli-server-482a8c7c1299.herokuapp.com/mem-cli";function d(c,t){const e=c.split("").map(o=>o.charCodeAt(0)),s={contractOwner:"",contentType:"application/javascript",contractSrc:e,initState:t},n=[{name:"Content-Type",value:"application/javascript"},{name:"Owner",value:""},{name:"App-Name",value:"EM"},{name:"Type",value:"Serverless-Function"},{name:"EM-Bundled",value:"true"},{name:"Size",value:String(e.length)}];return{dataTx:s,tags:n}}async function h(c){var t;try{const e=c.split(".mem")[0],n=await fetch("https://api.mem.tech/api/state/GJn1h75nIAyMW5XWgzraL-Ldxr2Zb38WlLEVwk6CBDs",{headers:{"Content-Type":"application/json"}});if(n.ok){const o=(t=await n.json())==null?void 0:t.names;if(e in o)return o[e]}throw new Error(n.statusText)}catch{return null}}class m{constructor(t){this.network=t.network}async readFunction(t){if(t.endsWith(".mem")&&(t=await h(t)),this.network==="mainnet"){const e=`https://api.mem.tech/api/state/${t}`,n=await fetch(e,{headers:{"Content-Type":"application/json"}});if(n.ok)return await n.json();throw new Error(n.statusText)}if(this.network==="testnet"){const e=`https://mem-testnet.xyz/state/${t}`,n=await fetch(e,{headers:{"Content-Type":"application/json"}});if(n.ok)return await n.json();throw new Error(n.statusText)}}async writeFunction(t,e){if(t.endsWith(".mem")&&(t=await h(t)),this.network==="mainnet"){const s="https://api.mem.tech/api/transactions",a={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({functionId:t,inputs:[{input:e}]})},p=await fetch(s,a);if(p.ok)return await p.json();throw new Error(p.statusText)}if(this.network==="testnet"){const s="https://mem-testnet.xyz/write",o={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({function_id:t,input:JSON.stringify(e)})},a=await fetch(s,o);if(a.ok)return await a.json();throw new Error(a.statusText)}}async deployFunction(t,e){if(this.network==="mainnet"){const s=JSON.stringify(d(t,e)),o=await fetch(i,{method:"post",url:i,body:s,headers:{Accept:"application/json","Content-Type":"application/json"},maxContentLength:1e8,maxBodyLength:1e9});if(o.ok)return{id:(await o.json()).txid};throw new Error(o.statusText)}if(this.network==="testnet"){const s={method:"post",url:"https://mem-testnet.xyz/deploy",body:JSON.stringify({src:t,state:e}),headers:{Accept:"application/json","Content-Type":"application/json"},maxContentLength:1e8,maxBodyLength:1e9},n=await fetch("https://mem-testnet.xyz/deploy",s);if(n.ok)return{id:(await n.json()).function_id};throw new Error(n.statusText)}}async forkFunction(t,e,s){if(this.network==="mainnet"){const n=s?`https://molext1.com/mem/fork/${t}/${e}/${s}`:`https://molext1.com/mem/fork/${t}/${e}`,a=await fetch(n,{headers:{"Content-Type":"application/json"}});if(a.ok)return await a.json();throw new Error(a.statusText)}}async kvFunction(t){if(this.network==="mainnet"){const e=`https://mem-api.com/kv/${t}`,n=await fetch(e,{headers:{"Content-Type":"application/json"}});if(n.ok)return await n.json();throw new Error(n.statusText)}}}class u extends m{async read(t){return await this.readFunction(t)}async write(t,e){return await this.writeFunction(t,e)}async deploy(t,e){return await this.deployFunction(t,e)}async fork(t,e,s){return await this.forkFunction(t,e,s)}async kvGet(t){return await this.kvFunction(t)}}class w extends u{}r.Actions=u,r.Mem=w,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})});
