"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const c="https://mem-cli-server-482a8c7c1299.herokuapp.com/mem-cli";function u(r,t){const e=r.split("").map(a=>a.charCodeAt(0)),s={contractOwner:"",contentType:"application/javascript",contractSrc:e,initState:t},n=[{name:"Content-Type",value:"application/javascript"},{name:"Owner",value:""},{name:"App-Name",value:"EM"},{name:"Type",value:"Serverless-Function"},{name:"EM-Bundled",value:"true"},{name:"Size",value:String(e.length)}];return{dataTx:s,tags:n}}async function p(r){var t;try{const e=r.split(".mem")[0],n=await fetch("https://api.mem.tech/api/state/GJn1h75nIAyMW5XWgzraL-Ldxr2Zb38WlLEVwk6CBDs",{headers:{"Content-Type":"application/json"}});if(n.ok){const a=(t=await n.json())==null?void 0:t.names;if(e in a)return a[e]}throw new Error(n.statusText)}catch{return null}}class m{constructor(t){this.network=t.network}async readFunction(t){if(t.endsWith(".mem")&&(t=await p(t)),this.network==="mainnet"){const e=`https://api.mem.tech/api/state/${t}`,n=await fetch(e,{headers:{"Content-Type":"application/json"}});if(n.ok)return await n.json();throw new Error(n.statusText)}if(this.network==="testnet"){const e=`https://mem-testnet.xyz/state/${t}`,n=await fetch(e,{headers:{"Content-Type":"application/json"}});if(n.ok)return await n.json();throw new Error(n.statusText)}}async writeFunction(t,e){if(t.endsWith(".mem")&&(t=await p(t)),this.network==="mainnet"){const s="https://api.mem.tech/api/transactions",o={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({functionId:t,inputs:[{input:e}]})},i=await fetch(s,o);if(i.ok)return await i.json();throw new Error(i.statusText)}if(this.network==="testnet"){const s="https://mem-testnet.xyz/write",a={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({function_id:t,input:JSON.stringify(e)})},o=await fetch(s,a);if(o.ok)return await o.json();throw new Error(o.statusText)}}async deployFunction(t,e){if(this.network==="mainnet"){const s=JSON.stringify(u(t,e)),a=await fetch(c,{method:"post",url:c,body:s,headers:{Accept:"application/json","Content-Type":"application/json"},maxContentLength:1e8,maxBodyLength:1e9});if(a.ok)return{id:(await a.json()).txid};throw new Error(a.statusText)}if(this.network==="testnet"){const s={method:"post",url:"https://mem-testnet.xyz/deploy",body:JSON.stringify({src:t,state:e}),headers:{Accept:"application/json","Content-Type":"application/json"},maxContentLength:1e8,maxBodyLength:1e9},n=await fetch("https://mem-testnet.xyz/deploy",s);if(n.ok)return{id:(await n.json()).function_id};throw new Error(n.statusText)}}async forkFunction(t,e,s){if(this.network==="mainnet"){const n=s?`https://molext1.com/mem/fork/${t}/${e}/${s}`:`https://molext1.com/mem/fork/${t}/${e}`,o=await fetch(n,{headers:{"Content-Type":"application/json"}});if(o.ok)return await o.json();throw new Error(o.statusText)}}async kvFunction(t){if(this.network==="mainnet"){const e=`https://mem-api.com/kv/${t}`,n=await fetch(e,{headers:{"Content-Type":"application/json"}});if(n.ok)return await n.json();throw new Error(n.statusText)}}}class h extends m{async read(t){return await this.readFunction(t)}async write(t,e){return await this.writeFunction(t,e)}async deploy(t,e){return await this.deployFunction(t,e)}async fork(t,e,s){return await this.forkFunction(t,e,s)}async kvGet(t){return await this.kvFunction(t)}}class w extends h{}exports.Actions=h;exports.Mem=w;
